const jscad = require('@jscad/modeling')
const { polygon } = jscad.primitives
const { center, scale } = jscad.transforms
const { extrudeLinear } = jscad.extrusions
const { subtract } = jscad.booleans
 
function main() {

  /* A
  const pts = [
    [[10,-24],[14,-36],[29,-36],[8,35],[-7,35],[-30,-36],[-14,-36],[-10,-24]],
    [[-6,-10],[6,-10],[0,9]]
  ] */
  /* B
  const pts = [
    [[-24,40],[-24,-30],[15,-30],[26,-20],[26,1],[22,5],[26,9],[26,30],[15,40]],
    [[-9,27],[-9,12],[11,12],[11,27]],
    [[-9,-2],[-9,-17],[11,-17],[11,-2]]
  ] */
  /* C const pts = [
    [[11,17],[27,17],[27,31],[15,41],[-12,41],[-24,31],[-24,-19],[-12,-30],[15,-30],[27,-19],[27,-6],[11,-6],[11,-16],[-8,-16],[-8,28],[11,28]]
  ] */
  /* D const pts = [
    [[-24,41],[-24,-30],[15,-30],[27,-19],[27,31],[15,41]],
    [[-8,28],[-8,-16],[11,-16],[11,28]]  
  ] */
  /* E const pts = [
    [[-20,-30],[22,-30],[22,-16],[-4,-16],[-4,-1],[17,-1],[17,13],[-4,13],[-4,28],[22,28],[22,41],[-20,41]]
  ] */
  /* F const pts = [
    [[-20,-30],[-4,-30],[-4,-1],[17,-1],[17,13],[-4,13],[-4,28],[22,28],[22,41],[-20,41]]  
  ] */
  /* G const pts = [
    [[11,17],[11,28],[-8,28],[-8,-16],[11,-16],[11,-1],[2,-1],[2,12],[27,12],[27,-19],[14,-30],[-12,-30],[-24,-19],[-24,31],[-12,41],[15,41],[27,31],[27,17]]
  ] */
  /* H const pts = [
    [[-24,39],[-24,-32],[-8,-32],[-8,-3],[9,-3],[9,-32],[25,-32],[25,39],[9,39],[9,10],[-8,10],[-8,39]]
  ] */
  /* I const pts = [
    [[-7,-32],[9,-32],[9,39],[-7,39]]
  ] */
  /* J const pts = [
    [[-8,-19],[-8,-8],[-24,-8],[-24,-22],[-12,-32],[15,-32],[27,-22],[27,39],[11,39],[11,-19]]
  ] */
  /* K const pts = [
    [[-25,-32],[-9,-32],[-9,-3],[10,-32],[28,-32],[4,3],[28,39],[10,39],[-9,9],[-9,39],[-25,39]]
  ] */
  /* L const pts =[
    [[-24,39],[-24,-32],[18,-32],[18,-19],[-9,-19],[-9,39]]
  ] */
  /* M const pts = [
    [[-29,-32],[-13,-32],[-13,-3],[-5,-32],[8,-32],[16,-3],[16,-32],[32,-32],[32,39],[15,39],[1,4],[-12,39],[-29,39]]
  ] */
  /* N const pts = [
    [[-26,-32],[-10,-32],[-10,8],[11,-32],[28,-32],[28,39],[13,39],[13,-2],[-8,39],[-26,39]]
  ] */
  /* O const pts = [
    [[-24,-22],[-12,-32],[15,-32],[27,-22],[27,28],[15,39],[-12,39],[-24,28]],
    [[-8,-19],[11,-19],[11,25],[-8,25]]
  ] */
  /* P const pts = [
    [[-24,39],[-24,-32],[-8,-32],[-8,-5],[15,-5],[27,5],[27,28],[15,39]],
    [[-8,25],[-8,8],[11,8],[11,25]]
  ] */
	/* Q const pts = [
		[[-24,-20],[-12,-30],[5,-30],[16,-40],[27,-30],[21,-25],[27,-19],[27,30],[15,41],[-12,41],[-24,31]],
		[[-8,-16],[11,-16],[11,27],[-8,27]]
  ] */
  /* R const pts = [
		[[-24,-32],[-8,-32],[-8,-5],[11,-5],[11,-32],[27,-32],[27,-1],[22,3],[27,7],[27,28],[14,39],[-24,39]],
		[[-8,25],[-8,8],[11,8],[11,25]]
	] */
	/* S const pts = [
		[[-24,-8],[-24,-22],[-12,-32],[15,-32],[27,-22],[27,-1],[15,10],[-8,10],[-8,25],[11,25],[11,15],[27,15],[27,28],[15,39],[-12,39],[-24,28],[-24,7],[-13,-3],[11,-3],[11,-18],[-8,-18],[-8,-8]]
	] */
	/* T const pts = [
		[[-24,39],[-24,25],[-9,25],[-9,-32],[7,-32],[7,25],[22,25],[22,39]]
	] */
	/* U const pts = [
		[[-24,39],[-24,-22],[-12,-32],[15,-32],[27,-22],[27,39],[11,39],[11,-18],[-8,-18],[-8,39]]
	] */
	/* V const pts = [
		[[-28,39],[-7,-32],[9,-32],[31,39],[15,39],[1,-6],[-12,39]]
	] */
	/* W const pts = [
		[[-41,39],[-27,-32],[-9,-32],[1,6],[11,-32],[30,-32],[43,39],[27,39],[20,0],[9,39],[-6,39],[-17,0],[-24,39]]
	] */
	/* X const pts = [
		[[-24,39],[-6,3],[-24,-32],[-7,-32],[2,-14],[11,-32],[28,-32],[11,3],[28,39],[11,39],[2,21],[-7,39]]
	] */
	/*  Y const pts = [
		[[-28,39],[-7,-7],[-7,-32],[8,-32],[8,-8],[30,39],[15,39],[1,10],[-12,39]]
	] */
	/* const pts = [
		[[-24,39],[-24,25],[3,25],[-24,-19],[-24,-32],[23,-32],[23,-19],[-4,-19],[23,26],[23,39]]
	] */

	const pts = [
[[-24,26],[-24,-24],[-12,-35],[15,-35],[27,-24],[27,26],[15,36],[-12,36]],
[[-8,23],[-8,-21],[11,-21],[11,23]]
	]
	
  let polys = pts.map((p) => { return polygon({points:p}) })
  const base = polys.shift()
  
  const ech = 2
  const hauteur = 30
  
  const lettre2D = center({}, scale([ech, ech, ech], 
    pts.length == 1 ? base : subtract(base, polys)))
  

  const lettre3D = extrudeLinear({height:hauteur}, lettre2D);
  
  console.log(lettre3D)
  
  return lettre3D
}

module.exports = { main }
